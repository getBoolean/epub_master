{
	// Place your shu_epub workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"PlantUML: Template": {
		"scope": "plantuml",
		"prefix": "@startuml",
		"body": [
			"@startuml ${1:Name}",
			"'skinparam linetype ortho",
			"'skinparam backgroundColor transparent",
			"'skinparam handwritten true",
			"'skinparam monochrome true",
			"'left to right direction",
			"skinparam sequenceMessageAlign direction",
			"hide empty members",
			"hide empty description",
			"skinparam classAttributeIconSize 0",
			"'skinparam style strictuml",
			"skinparam groupInheritance 3",
			"",
			"",
			"",
			"@enduml"
		],
		"description": "PlantUML: Template"
	},
	"PlantUML: Class": {
		"scope": "plantuml",
		"prefix": "class",
		"body": [
			"class $1 {",
			"    $2",
			"}"
		],
		"description": "PlantUML: Class"
	},
	"PlantUML: Interface": {
		"scope": "plantuml",
		"prefix": "interface",
		"body": [
			"interface $1 {",
			"    $2",
			"}"
		],
		"description": "PlantUML: Interface"
	},
	"PlantUML: Abstract Class": {
		"scope": "plantuml",
		"prefix": "abstract",
		"body": [
			"abstract $1 {",
			"    $2",
			"}"
		],
		"description": "PlantUML: Abstract Class"
	},
	"PlantUML: Enum": {
		"scope": "plantuml",
		"prefix": "enum",
		"body": [
			"enum $1 {",
			"    $2",
			"}"
		],
		"description": "PlantUML: Enum"
	},
	


}